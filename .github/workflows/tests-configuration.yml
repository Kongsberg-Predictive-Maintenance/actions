name: Tests
on: 
  workflow_call:
    secrets:
      organization_key:
        required: true
jobs:
  build:
    name: Tests
    runs-on: ubuntu-20.04
    steps:
    - name: Setup action
      uses: nschloe/action-cached-lfs-checkout@v1
      with:
        exclude: "doc/*"

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7
        cache: 'pip' # caching pip dependencies

    - name: Load private keys to pipeline
      uses: webfactory/ssh-agent@v0.5.2
      with:
        ssh-private-key: |
          ${{ secrets.organization_key }}

    - name: Cache dependencies to speed up the workflow
      uses: actions/cache@v1
      id:   cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_tests.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tests/requirements_tests.txt
        python -m pip install "pylint==2.13.5"
        python -m pip install flake8-eradicate  
        python -m pip install radon
        python -m pip install dlint
 
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v18.6
      with:
        files: |
          **/*.py
        files_ignore: |
          doc/**
          badges/**
          
    - name: List all changed files
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "$file was changed"
        done
        
    - name: Analyze the code with linter
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          python -m pylint "$file" --rcfile ".pylintrc"
        done
        
    - name: Analyze the code with Flake8, Dlint and Radon
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          python -m flake8 --radon-max-cc 6 --max-line-length 100 "$file"
        done

    - name: Test with pytest
      run: |
        python -m pytest tests
